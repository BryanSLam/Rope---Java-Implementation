//The rope splits up a long string so insertion deletion and random
//access can be done efficiently

//Each node contains a short string

//Each node has a weight equal to the length of its string
//plus the sum of all the weights in the left subtree

//Operations include index, split, concat, insert, delete, report
public class Rope 
{
	private Node root;
	public Rope()
	{
		
	}
	
	//Call the recursive method starting at the root with i
	public char getIndex(int i)
	{
		return root.index(i);
	}
}
