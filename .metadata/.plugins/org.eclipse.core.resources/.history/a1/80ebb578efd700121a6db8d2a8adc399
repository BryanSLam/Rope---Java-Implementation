import java.util.ArrayList;


public class Node 
{
	private String string;
	private Node leftNode;
	private Node rightNode;
	
	public Node(String s)
	{
		string = s;
	}
	
	
	public void addChild(Node n)
	{
		
	}
	public String getString()
	{
		return string;
	}
	
	//To calculate the weight, get the weight of the node's left child and the weight of all
	//the nodes in it's right subtree
	
	//If the node is a leaf then return the length of the
	
	//Recursive method
	public int getWeight(Node n)
	{
		if(n.getRight() == null)
		{
			return 0;
		}
		return n.getRight().getString().length() + getWeight(n.getRight());
	}
	
	//To get the weight you have to call the getweight starting with the first node on the left subtree
	public int weight()
	{
		return getWeight(this.leftNode);
	}
	public Node getLeft()
	{
		return leftNode;
	}
	public Node getRight()
	{
		return rightNode;
	}
}
